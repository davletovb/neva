[build-system]
requires = ["poetry-core>=1.6.1"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "neva"
version = "0.1.0"
description = "Neva provides agent, environment, and scheduler abstractions for LLM-based simulations."
authors = ["Neva Contributors"]
readme = "README.md"
license = "MIT"
packages = [{ include = "neva" }]

[tool.poetry.dependencies]
python = "^3.9"
openai = "0.28.1"
requests = "^2.31.0"
wikipedia = { version = "1.4.0", optional = true }
"opentelemetry-api" = { version = "^1.23.0", optional = true }
"opentelemetry-sdk" = { version = "^1.23.0", optional = true }
"deep-translator" = { version = "^1.11.4", optional = true }
transformers = { version = "^4.35.2", optional = true }
mlflow = { version = "^2.9.1", optional = true }
anthropic = { version = "^0.26.0", optional = true }
"google-generativeai" = { version = "^0.3.2", optional = true }

[tool.poetry.group.dev.dependencies]
black = "23.9.1"
coverage = "7.3.2"
mypy = "1.6.1"
pytest = "7.4.2"
pytest-cov = "4.1.0"
isort = "5.12.0"
flake8 = "6.1.0"
pre-commit = "3.4.0"
bandit = "1.7.5"
sphinx = "7.2.6"
types-requests = "2.31.0.7"

[tool.poetry.extras]
tools = ["wikipedia", "deep-translator", "transformers"]
mlops = ["mlflow"]
providers = ["anthropic", "google-generativeai"]
observability = ["opentelemetry-api", "opentelemetry-sdk"]
all = [
    "wikipedia",
    "deep-translator",
    "transformers",
    "mlflow",
    "anthropic",
    "google-generativeai",
    "opentelemetry-api",
    "opentelemetry-sdk",
]

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.pytest.ini_options]
addopts = "-ra --cov=neva --cov-report=term-missing --cov-report=xml --cov-report=html --cov-fail-under=80"
testpaths = ["tests"]

[tool.isort]
profile = "black"
line_length = 100
combine_as_imports = true
known_first_party = ["neva"]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
per-file-ignores = [
  "examples/*.py: E402",
  "tests/**/*.py: E402"
]

[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
strict = false
follow_imports = "silent"
show_error_codes = true
plugins = []

[tool.bandit]
skips = ["B101"]

[tool.coverage.run]
omit = [
    "neva/agents/gpt.py",
    "neva/memory/faiss_vector_store.py",
]
